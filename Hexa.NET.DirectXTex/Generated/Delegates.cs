// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

#if !STANDALONE
using Silk.NET.DXGI;
using Silk.NET.Direct2D;
using Silk.NET.Direct3D11;
using Silk.NET.Direct3D12;
#endif
namespace Hexa.NET.DirectXTex
{
	#if NET5_0_OR_GREATER
	/// <summary>
	/// To be documented.
	/// </summary>
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void SetCustomProps([NativeName(NativeNameType.Param, "pBag")] [NativeName(NativeNameType.Type, "IPropertyBag2 *")] void* pBag);

	#else
	/// <summary>
	/// To be documented.
	/// </summary>
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void SetCustomProps([NativeName(NativeNameType.Param, "pBag")] [NativeName(NativeNameType.Type, "IPropertyBag2 *")] nint pBag);

	#endif

	#if NET5_0_OR_GREATER
	/// <summary>
	/// To be documented.
	/// </summary>
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void GetMQR([NativeName(NativeNameType.Param, "qMqr")] [NativeName(NativeNameType.Type, "IWICMetadataQueryReader *")] void* qMqr);

	#else
	/// <summary>
	/// To be documented.
	/// </summary>
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void GetMQR([NativeName(NativeNameType.Param, "qMqr")] [NativeName(NativeNameType.Type, "IWICMetadataQueryReader *")] nint qMqr);

	#endif

	#if NET5_0_OR_GREATER
	/// <summary>
	/// To be documented.
	/// </summary>
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void EvaluateImageFunc([NativeName(NativeNameType.Param, "pixels")] [NativeName(NativeNameType.Type, "XMVECTOR const *")] Vector4* pixels, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "size_t")] ulong y);

	#else
	/// <summary>
	/// To be documented.
	/// </summary>
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void EvaluateImageFunc([NativeName(NativeNameType.Param, "pixels")] [NativeName(NativeNameType.Type, "XMVECTOR const *")] nint pixels, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "size_t")] ulong y);

	#endif

	#if NET5_0_OR_GREATER
	/// <summary>
	/// To be documented.
	/// </summary>
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void TransformImageFunc([NativeName(NativeNameType.Param, "outPixels")] [NativeName(NativeNameType.Type, "XMVECTOR *")] Vector4* outPixels, [NativeName(NativeNameType.Param, "inPixels")] [NativeName(NativeNameType.Type, "XMVECTOR const *")] Vector4* inPixels, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "size_t")] ulong y);

	#else
	/// <summary>
	/// To be documented.
	/// </summary>
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void TransformImageFunc([NativeName(NativeNameType.Param, "outPixels")] [NativeName(NativeNameType.Type, "XMVECTOR *")] nint outPixels, [NativeName(NativeNameType.Param, "inPixels")] [NativeName(NativeNameType.Type, "XMVECTOR const *")] nint inPixels, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "y")] [NativeName(NativeNameType.Type, "size_t")] ulong y);

	#endif

}
