// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

#if !STANDALONE
using Silk.NET.DXGI;
using Silk.NET.Direct2D;
using Silk.NET.Direct3D11;
using Silk.NET.Direct3D12;
#endif
namespace Hexa.NET.DirectXTex
{
	public unsafe partial class DirectXTex
	{

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "LoadFromTGAFile2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult LoadFromTGAFile2([NativeName(NativeNameType.Param, "szFile")] [NativeName(NativeNameType.Type, "wchar const *")] char* szFile, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata *")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage image)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				fixed (ScratchImage* pimage = &image)
				{
					HResult ret = LoadFromTGAFile2Native(szFile, (TexMetadata*)pmetadata, (ScratchImage*)pimage);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "LoadFromTGAFile2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult LoadFromTGAFile2([NativeName(NativeNameType.Param, "szFile")] [NativeName(NativeNameType.Type, "wchar const *")] ref char szFile, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata *")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage image)
		{
			fixed (char* pszFile = &szFile)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					fixed (ScratchImage* pimage = &image)
					{
						HResult ret = LoadFromTGAFile2Native((char*)pszFile, (TexMetadata*)pmetadata, (ScratchImage*)pimage);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "LoadFromTGAFile2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult LoadFromTGAFile2([NativeName(NativeNameType.Param, "szFile")] [NativeName(NativeNameType.Type, "wchar const *")] string szFile, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata *")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage image)
		{
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (szFile != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(szFile);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = (char*)Utils.Alloc<byte>(pStrSize0 + 2);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 2];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(szFile, pStr0, pStrSize0) / 2;
				pStr0[pStrOffset0] = '\0';
			}
			fixed (TexMetadata* pmetadata = &metadata)
			{
				fixed (ScratchImage* pimage = &image)
				{
					HResult ret = LoadFromTGAFile2Native(pStr0, (TexMetadata*)pmetadata, (ScratchImage*)pimage);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						Utils.Free(pStr0);
					}
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SaveToTGAMemory2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		internal static HResult SaveToTGAMemory2Native([NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "Image const&")] Image* image, [NativeName(NativeNameType.Param, "blob")] [NativeName(NativeNameType.Type, "BlobT *")] Blob* blob, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const *")] TexMetadata* metadata)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<Image*, Blob*, TexMetadata*, HResult>)vt[92])(image, blob, metadata);
			#else
			return (HResult)((delegate* unmanaged[Cdecl]<nint, nint, nint, HResult>)vt[92])((nint)image, (nint)blob, (nint)metadata);
			#endif
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "SaveToTGAMemory2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult SaveToTGAMemory2([NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "Image const&")] Image* image, [NativeName(NativeNameType.Param, "blob")] [NativeName(NativeNameType.Type, "BlobT *")] Blob* blob, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const *")] TexMetadata* metadata)
		{
			HResult ret = SaveToTGAMemory2Native(image, blob, metadata);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "SaveToTGAMemory2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult SaveToTGAMemory2([NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "Image const&")] ref Image image, [NativeName(NativeNameType.Param, "blob")] [NativeName(NativeNameType.Type, "BlobT *")] Blob* blob, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const *")] TexMetadata* metadata)
		{
			fixed (Image* pimage = &image)
			{
				HResult ret = SaveToTGAMemory2Native((Image*)pimage, blob, metadata);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "SaveToTGAMemory2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult SaveToTGAMemory2([NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "Image const&")] Image* image, [NativeName(NativeNameType.Param, "blob")] [NativeName(NativeNameType.Type, "BlobT *")] ref Blob blob, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const *")] TexMetadata* metadata)
		{
			fixed (Blob* pblob = &blob)
			{
				HResult ret = SaveToTGAMemory2Native(image, (Blob*)pblob, metadata);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "SaveToTGAMemory2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult SaveToTGAMemory2([NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "Image const&")] ref Image image, [NativeName(NativeNameType.Param, "blob")] [NativeName(NativeNameType.Type, "BlobT *")] ref Blob blob, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const *")] TexMetadata* metadata)
		{
			fixed (Image* pimage = &image)
			{
				fixed (Blob* pblob = &blob)
				{
					HResult ret = SaveToTGAMemory2Native((Image*)pimage, (Blob*)pblob, metadata);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "SaveToTGAMemory2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult SaveToTGAMemory2([NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "Image const&")] Image* image, [NativeName(NativeNameType.Param, "blob")] [NativeName(NativeNameType.Type, "BlobT *")] Blob* blob, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const *")] ref TexMetadata metadata)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				HResult ret = SaveToTGAMemory2Native(image, blob, (TexMetadata*)pmetadata);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "SaveToTGAMemory2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult SaveToTGAMemory2([NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "Image const&")] ref Image image, [NativeName(NativeNameType.Param, "blob")] [NativeName(NativeNameType.Type, "BlobT *")] Blob* blob, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const *")] ref TexMetadata metadata)
		{
			fixed (Image* pimage = &image)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = SaveToTGAMemory2Native((Image*)pimage, blob, (TexMetadata*)pmetadata);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "SaveToTGAMemory2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult SaveToTGAMemory2([NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "Image const&")] Image* image, [NativeName(NativeNameType.Param, "blob")] [NativeName(NativeNameType.Type, "BlobT *")] ref Blob blob, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const *")] ref TexMetadata metadata)
		{
			fixed (Blob* pblob = &blob)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = SaveToTGAMemory2Native(image, (Blob*)pblob, (TexMetadata*)pmetadata);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "SaveToTGAMemory2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult SaveToTGAMemory2([NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "Image const&")] ref Image image, [NativeName(NativeNameType.Param, "blob")] [NativeName(NativeNameType.Type, "BlobT *")] ref Blob blob, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const *")] ref TexMetadata metadata)
		{
			fixed (Image* pimage = &image)
			{
				fixed (Blob* pblob = &blob)
				{
					fixed (TexMetadata* pmetadata = &metadata)
					{
						HResult ret = SaveToTGAMemory2Native((Image*)pimage, (Blob*)pblob, (TexMetadata*)pmetadata);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SaveToTGAFile2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		internal static HResult SaveToTGAFile2Native([NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "Image const&")] Image* image, [NativeName(NativeNameType.Param, "szFile")] [NativeName(NativeNameType.Type, "wchar const *")] char* szFile, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const *")] TexMetadata* metadata)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<Image*, char*, TexMetadata*, HResult>)vt[93])(image, szFile, metadata);
			#else
			return (HResult)((delegate* unmanaged[Cdecl]<nint, nint, nint, HResult>)vt[93])((nint)image, (nint)szFile, (nint)metadata);
			#endif
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "SaveToTGAFile2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult SaveToTGAFile2([NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "Image const&")] Image* image, [NativeName(NativeNameType.Param, "szFile")] [NativeName(NativeNameType.Type, "wchar const *")] char* szFile, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const *")] TexMetadata* metadata)
		{
			HResult ret = SaveToTGAFile2Native(image, szFile, metadata);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "SaveToTGAFile2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult SaveToTGAFile2([NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "Image const&")] ref Image image, [NativeName(NativeNameType.Param, "szFile")] [NativeName(NativeNameType.Type, "wchar const *")] char* szFile, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const *")] TexMetadata* metadata)
		{
			fixed (Image* pimage = &image)
			{
				HResult ret = SaveToTGAFile2Native((Image*)pimage, szFile, metadata);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "SaveToTGAFile2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult SaveToTGAFile2([NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "Image const&")] Image* image, [NativeName(NativeNameType.Param, "szFile")] [NativeName(NativeNameType.Type, "wchar const *")] ref char szFile, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const *")] TexMetadata* metadata)
		{
			fixed (char* pszFile = &szFile)
			{
				HResult ret = SaveToTGAFile2Native(image, (char*)pszFile, metadata);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "SaveToTGAFile2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult SaveToTGAFile2([NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "Image const&")] Image* image, [NativeName(NativeNameType.Param, "szFile")] [NativeName(NativeNameType.Type, "wchar const *")] string szFile, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const *")] TexMetadata* metadata)
		{
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (szFile != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(szFile);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = (char*)Utils.Alloc<byte>(pStrSize0 + 2);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 2];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(szFile, pStr0, pStrSize0) / 2;
				pStr0[pStrOffset0] = '\0';
			}
			HResult ret = SaveToTGAFile2Native(image, pStr0, metadata);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "SaveToTGAFile2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult SaveToTGAFile2([NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "Image const&")] ref Image image, [NativeName(NativeNameType.Param, "szFile")] [NativeName(NativeNameType.Type, "wchar const *")] ref char szFile, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const *")] TexMetadata* metadata)
		{
			fixed (Image* pimage = &image)
			{
				fixed (char* pszFile = &szFile)
				{
					HResult ret = SaveToTGAFile2Native((Image*)pimage, (char*)pszFile, metadata);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "SaveToTGAFile2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult SaveToTGAFile2([NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "Image const&")] ref Image image, [NativeName(NativeNameType.Param, "szFile")] [NativeName(NativeNameType.Type, "wchar const *")] string szFile, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const *")] TexMetadata* metadata)
		{
			fixed (Image* pimage = &image)
			{
				char* pStr0 = null;
				int pStrSize0 = 0;
				if (szFile != null)
				{
					pStrSize0 = Utils.GetByteCountUTF16(szFile);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = (char*)Utils.Alloc<byte>(pStrSize0 + 2);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 2];
						pStr0 = (char*)pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF16(szFile, pStr0, pStrSize0) / 2;
					pStr0[pStrOffset0] = '\0';
				}
				HResult ret = SaveToTGAFile2Native((Image*)pimage, pStr0, metadata);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "SaveToTGAFile2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult SaveToTGAFile2([NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "Image const&")] Image* image, [NativeName(NativeNameType.Param, "szFile")] [NativeName(NativeNameType.Type, "wchar const *")] char* szFile, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const *")] ref TexMetadata metadata)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				HResult ret = SaveToTGAFile2Native(image, szFile, (TexMetadata*)pmetadata);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "SaveToTGAFile2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult SaveToTGAFile2([NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "Image const&")] ref Image image, [NativeName(NativeNameType.Param, "szFile")] [NativeName(NativeNameType.Type, "wchar const *")] char* szFile, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const *")] ref TexMetadata metadata)
		{
			fixed (Image* pimage = &image)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = SaveToTGAFile2Native((Image*)pimage, szFile, (TexMetadata*)pmetadata);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "SaveToTGAFile2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult SaveToTGAFile2([NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "Image const&")] Image* image, [NativeName(NativeNameType.Param, "szFile")] [NativeName(NativeNameType.Type, "wchar const *")] ref char szFile, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const *")] ref TexMetadata metadata)
		{
			fixed (char* pszFile = &szFile)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = SaveToTGAFile2Native(image, (char*)pszFile, (TexMetadata*)pmetadata);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "SaveToTGAFile2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult SaveToTGAFile2([NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "Image const&")] Image* image, [NativeName(NativeNameType.Param, "szFile")] [NativeName(NativeNameType.Type, "wchar const *")] string szFile, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const *")] ref TexMetadata metadata)
		{
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (szFile != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(szFile);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = (char*)Utils.Alloc<byte>(pStrSize0 + 2);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 2];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(szFile, pStr0, pStrSize0) / 2;
				pStr0[pStrOffset0] = '\0';
			}
			fixed (TexMetadata* pmetadata = &metadata)
			{
				HResult ret = SaveToTGAFile2Native(image, pStr0, (TexMetadata*)pmetadata);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "SaveToTGAFile2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult SaveToTGAFile2([NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "Image const&")] ref Image image, [NativeName(NativeNameType.Param, "szFile")] [NativeName(NativeNameType.Type, "wchar const *")] ref char szFile, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const *")] ref TexMetadata metadata)
		{
			fixed (Image* pimage = &image)
			{
				fixed (char* pszFile = &szFile)
				{
					fixed (TexMetadata* pmetadata = &metadata)
					{
						HResult ret = SaveToTGAFile2Native((Image*)pimage, (char*)pszFile, (TexMetadata*)pmetadata);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "SaveToTGAFile2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult SaveToTGAFile2([NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "Image const&")] ref Image image, [NativeName(NativeNameType.Param, "szFile")] [NativeName(NativeNameType.Type, "wchar const *")] string szFile, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const *")] ref TexMetadata metadata)
		{
			fixed (Image* pimage = &image)
			{
				char* pStr0 = null;
				int pStrSize0 = 0;
				if (szFile != null)
				{
					pStrSize0 = Utils.GetByteCountUTF16(szFile);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = (char*)Utils.Alloc<byte>(pStrSize0 + 2);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 2];
						pStr0 = (char*)pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF16(szFile, pStr0, pStrSize0) / 2;
					pStr0[pStrOffset0] = '\0';
				}
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = SaveToTGAFile2Native((Image*)pimage, pStr0, (TexMetadata*)pmetadata);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						Utils.Free(pStr0);
					}
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "FlipRotate")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		internal static HResult FlipRotateNative([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] Image* srcImage, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_FR_FLAGS")] TexFRFlags flags, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* image)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<Image*, TexFRFlags, ScratchImage*, HResult>)vt[94])(srcImage, flags, image);
			#else
			return (HResult)((delegate* unmanaged[Cdecl]<nint, TexFRFlags, nint, HResult>)vt[94])((nint)srcImage, flags, (nint)image);
			#endif
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "FlipRotate")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult FlipRotate([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] Image* srcImage, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_FR_FLAGS")] TexFRFlags flags, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* image)
		{
			HResult ret = FlipRotateNative(srcImage, flags, image);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "FlipRotate")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult FlipRotate([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] ref Image srcImage, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_FR_FLAGS")] TexFRFlags flags, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* image)
		{
			fixed (Image* psrcImage = &srcImage)
			{
				HResult ret = FlipRotateNative((Image*)psrcImage, flags, image);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "FlipRotate")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult FlipRotate([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] Image* srcImage, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_FR_FLAGS")] TexFRFlags flags, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage image)
		{
			fixed (ScratchImage* pimage = &image)
			{
				HResult ret = FlipRotateNative(srcImage, flags, (ScratchImage*)pimage);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "FlipRotate")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult FlipRotate([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] ref Image srcImage, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_FR_FLAGS")] TexFRFlags flags, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage image)
		{
			fixed (Image* psrcImage = &srcImage)
			{
				fixed (ScratchImage* pimage = &image)
				{
					HResult ret = FlipRotateNative((Image*)psrcImage, flags, (ScratchImage*)pimage);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "FlipRotate2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		internal static HResult FlipRotate2Native([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_FR_FLAGS")] TexFRFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<Image*, ulong, TexMetadata*, TexFRFlags, ScratchImage*, HResult>)vt[95])(srcImages, nimages, metadata, flags, result);
			#else
			return (HResult)((delegate* unmanaged[Cdecl]<nint, ulong, nint, TexFRFlags, nint, HResult>)vt[95])((nint)srcImages, nimages, (nint)metadata, flags, (nint)result);
			#endif
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "FlipRotate2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult FlipRotate2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_FR_FLAGS")] TexFRFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			HResult ret = FlipRotate2Native(srcImages, nimages, metadata, flags, result);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "FlipRotate2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult FlipRotate2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_FR_FLAGS")] TexFRFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				HResult ret = FlipRotate2Native((Image*)psrcImages, nimages, metadata, flags, result);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "FlipRotate2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult FlipRotate2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_FR_FLAGS")] TexFRFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			HResult ret = FlipRotate2Native(srcImages, nimages, metadata, flags, result);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "FlipRotate2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult FlipRotate2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_FR_FLAGS")] TexFRFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				HResult ret = FlipRotate2Native((Image*)psrcImages, nimages, metadata, flags, result);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "FlipRotate2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult FlipRotate2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_FR_FLAGS")] TexFRFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				HResult ret = FlipRotate2Native(srcImages, nimages, (TexMetadata*)pmetadata, flags, result);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "FlipRotate2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult FlipRotate2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_FR_FLAGS")] TexFRFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = FlipRotate2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, flags, result);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "FlipRotate2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult FlipRotate2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_FR_FLAGS")] TexFRFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				HResult ret = FlipRotate2Native(srcImages, nimages, (TexMetadata*)pmetadata, flags, result);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "FlipRotate2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult FlipRotate2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_FR_FLAGS")] TexFRFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = FlipRotate2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, flags, result);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "FlipRotate2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult FlipRotate2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_FR_FLAGS")] TexFRFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (ScratchImage* presult = &result)
			{
				HResult ret = FlipRotate2Native(srcImages, nimages, metadata, flags, (ScratchImage*)presult);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "FlipRotate2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult FlipRotate2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_FR_FLAGS")] TexFRFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (ScratchImage* presult = &result)
				{
					HResult ret = FlipRotate2Native((Image*)psrcImages, nimages, metadata, flags, (ScratchImage*)presult);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "FlipRotate2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult FlipRotate2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_FR_FLAGS")] TexFRFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (ScratchImage* presult = &result)
			{
				HResult ret = FlipRotate2Native(srcImages, nimages, metadata, flags, (ScratchImage*)presult);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "FlipRotate2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult FlipRotate2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_FR_FLAGS")] TexFRFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (ScratchImage* presult = &result)
				{
					HResult ret = FlipRotate2Native((Image*)psrcImages, nimages, metadata, flags, (ScratchImage*)presult);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "FlipRotate2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult FlipRotate2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_FR_FLAGS")] TexFRFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				fixed (ScratchImage* presult = &result)
				{
					HResult ret = FlipRotate2Native(srcImages, nimages, (TexMetadata*)pmetadata, flags, (ScratchImage*)presult);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "FlipRotate2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult FlipRotate2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_FR_FLAGS")] TexFRFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					fixed (ScratchImage* presult = &result)
					{
						HResult ret = FlipRotate2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, flags, (ScratchImage*)presult);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "FlipRotate2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult FlipRotate2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_FR_FLAGS")] TexFRFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				fixed (ScratchImage* presult = &result)
				{
					HResult ret = FlipRotate2Native(srcImages, nimages, (TexMetadata*)pmetadata, flags, (ScratchImage*)presult);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "FlipRotate2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult FlipRotate2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_FR_FLAGS")] TexFRFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					fixed (ScratchImage* presult = &result)
					{
						HResult ret = FlipRotate2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, flags, (ScratchImage*)presult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Resize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		internal static HResult ResizeNative([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] Image* srcImage, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* image)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<Image*, ulong, ulong, TexFilterFlags, ScratchImage*, HResult>)vt[96])(srcImage, width, height, filter, image);
			#else
			return (HResult)((delegate* unmanaged[Cdecl]<nint, ulong, ulong, TexFilterFlags, nint, HResult>)vt[96])((nint)srcImage, width, height, filter, (nint)image);
			#endif
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] Image* srcImage, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* image)
		{
			HResult ret = ResizeNative(srcImage, width, height, filter, image);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] ref Image srcImage, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* image)
		{
			fixed (Image* psrcImage = &srcImage)
			{
				HResult ret = ResizeNative((Image*)psrcImage, width, height, filter, image);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] Image* srcImage, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* image)
		{
			HResult ret = ResizeNative(srcImage, width, height, filter, image);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] ref Image srcImage, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* image)
		{
			fixed (Image* psrcImage = &srcImage)
			{
				HResult ret = ResizeNative((Image*)psrcImage, width, height, filter, image);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] Image* srcImage, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* image)
		{
			HResult ret = ResizeNative(srcImage, width, height, filter, image);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] ref Image srcImage, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* image)
		{
			fixed (Image* psrcImage = &srcImage)
			{
				HResult ret = ResizeNative((Image*)psrcImage, width, height, filter, image);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] Image* srcImage, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* image)
		{
			HResult ret = ResizeNative(srcImage, width, height, filter, image);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] ref Image srcImage, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* image)
		{
			fixed (Image* psrcImage = &srcImage)
			{
				HResult ret = ResizeNative((Image*)psrcImage, width, height, filter, image);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] Image* srcImage, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage image)
		{
			fixed (ScratchImage* pimage = &image)
			{
				HResult ret = ResizeNative(srcImage, width, height, filter, (ScratchImage*)pimage);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] ref Image srcImage, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage image)
		{
			fixed (Image* psrcImage = &srcImage)
			{
				fixed (ScratchImage* pimage = &image)
				{
					HResult ret = ResizeNative((Image*)psrcImage, width, height, filter, (ScratchImage*)pimage);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] Image* srcImage, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage image)
		{
			fixed (ScratchImage* pimage = &image)
			{
				HResult ret = ResizeNative(srcImage, width, height, filter, (ScratchImage*)pimage);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] ref Image srcImage, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage image)
		{
			fixed (Image* psrcImage = &srcImage)
			{
				fixed (ScratchImage* pimage = &image)
				{
					HResult ret = ResizeNative((Image*)psrcImage, width, height, filter, (ScratchImage*)pimage);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] Image* srcImage, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage image)
		{
			fixed (ScratchImage* pimage = &image)
			{
				HResult ret = ResizeNative(srcImage, width, height, filter, (ScratchImage*)pimage);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] ref Image srcImage, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage image)
		{
			fixed (Image* psrcImage = &srcImage)
			{
				fixed (ScratchImage* pimage = &image)
				{
					HResult ret = ResizeNative((Image*)psrcImage, width, height, filter, (ScratchImage*)pimage);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] Image* srcImage, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage image)
		{
			fixed (ScratchImage* pimage = &image)
			{
				HResult ret = ResizeNative(srcImage, width, height, filter, (ScratchImage*)pimage);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] ref Image srcImage, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage image)
		{
			fixed (Image* psrcImage = &srcImage)
			{
				fixed (ScratchImage* pimage = &image)
				{
					HResult ret = ResizeNative((Image*)psrcImage, width, height, filter, (ScratchImage*)pimage);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		internal static HResult Resize2Native([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<Image*, ulong, TexMetadata*, ulong, ulong, TexFilterFlags, ScratchImage*, HResult>)vt[97])(srcImages, nimages, metadata, width, height, filter, result);
			#else
			return (HResult)((delegate* unmanaged[Cdecl]<nint, ulong, nint, ulong, ulong, TexFilterFlags, nint, HResult>)vt[97])((nint)srcImages, nimages, (nint)metadata, width, height, filter, (nint)result);
			#endif
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			HResult ret = Resize2Native(srcImages, nimages, metadata, width, height, filter, result);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				HResult ret = Resize2Native((Image*)psrcImages, nimages, metadata, width, height, filter, result);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			HResult ret = Resize2Native(srcImages, nimages, metadata, width, height, filter, result);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				HResult ret = Resize2Native((Image*)psrcImages, nimages, metadata, width, height, filter, result);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				HResult ret = Resize2Native(srcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, result);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = Resize2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, result);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				HResult ret = Resize2Native(srcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, result);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = Resize2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, result);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			HResult ret = Resize2Native(srcImages, nimages, metadata, width, height, filter, result);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				HResult ret = Resize2Native((Image*)psrcImages, nimages, metadata, width, height, filter, result);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			HResult ret = Resize2Native(srcImages, nimages, metadata, width, height, filter, result);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				HResult ret = Resize2Native((Image*)psrcImages, nimages, metadata, width, height, filter, result);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				HResult ret = Resize2Native(srcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, result);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = Resize2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, result);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				HResult ret = Resize2Native(srcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, result);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = Resize2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, result);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			HResult ret = Resize2Native(srcImages, nimages, metadata, width, height, filter, result);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				HResult ret = Resize2Native((Image*)psrcImages, nimages, metadata, width, height, filter, result);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			HResult ret = Resize2Native(srcImages, nimages, metadata, width, height, filter, result);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				HResult ret = Resize2Native((Image*)psrcImages, nimages, metadata, width, height, filter, result);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				HResult ret = Resize2Native(srcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, result);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = Resize2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, result);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				HResult ret = Resize2Native(srcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, result);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = Resize2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, result);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			HResult ret = Resize2Native(srcImages, nimages, metadata, width, height, filter, result);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				HResult ret = Resize2Native((Image*)psrcImages, nimages, metadata, width, height, filter, result);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			HResult ret = Resize2Native(srcImages, nimages, metadata, width, height, filter, result);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				HResult ret = Resize2Native((Image*)psrcImages, nimages, metadata, width, height, filter, result);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				HResult ret = Resize2Native(srcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, result);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = Resize2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, result);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				HResult ret = Resize2Native(srcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, result);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = Resize2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, result);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (ScratchImage* presult = &result)
			{
				HResult ret = Resize2Native(srcImages, nimages, metadata, width, height, filter, (ScratchImage*)presult);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (ScratchImage* presult = &result)
				{
					HResult ret = Resize2Native((Image*)psrcImages, nimages, metadata, width, height, filter, (ScratchImage*)presult);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (ScratchImage* presult = &result)
			{
				HResult ret = Resize2Native(srcImages, nimages, metadata, width, height, filter, (ScratchImage*)presult);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (ScratchImage* presult = &result)
				{
					HResult ret = Resize2Native((Image*)psrcImages, nimages, metadata, width, height, filter, (ScratchImage*)presult);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				fixed (ScratchImage* presult = &result)
				{
					HResult ret = Resize2Native(srcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, (ScratchImage*)presult);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					fixed (ScratchImage* presult = &result)
					{
						HResult ret = Resize2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, (ScratchImage*)presult);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				fixed (ScratchImage* presult = &result)
				{
					HResult ret = Resize2Native(srcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, (ScratchImage*)presult);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					fixed (ScratchImage* presult = &result)
					{
						HResult ret = Resize2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, (ScratchImage*)presult);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (ScratchImage* presult = &result)
			{
				HResult ret = Resize2Native(srcImages, nimages, metadata, width, height, filter, (ScratchImage*)presult);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (ScratchImage* presult = &result)
				{
					HResult ret = Resize2Native((Image*)psrcImages, nimages, metadata, width, height, filter, (ScratchImage*)presult);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (ScratchImage* presult = &result)
			{
				HResult ret = Resize2Native(srcImages, nimages, metadata, width, height, filter, (ScratchImage*)presult);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (ScratchImage* presult = &result)
				{
					HResult ret = Resize2Native((Image*)psrcImages, nimages, metadata, width, height, filter, (ScratchImage*)presult);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				fixed (ScratchImage* presult = &result)
				{
					HResult ret = Resize2Native(srcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, (ScratchImage*)presult);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					fixed (ScratchImage* presult = &result)
					{
						HResult ret = Resize2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, (ScratchImage*)presult);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				fixed (ScratchImage* presult = &result)
				{
					HResult ret = Resize2Native(srcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, (ScratchImage*)presult);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] ulong height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					fixed (ScratchImage* presult = &result)
					{
						HResult ret = Resize2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, (ScratchImage*)presult);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (ScratchImage* presult = &result)
			{
				HResult ret = Resize2Native(srcImages, nimages, metadata, width, height, filter, (ScratchImage*)presult);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (ScratchImage* presult = &result)
				{
					HResult ret = Resize2Native((Image*)psrcImages, nimages, metadata, width, height, filter, (ScratchImage*)presult);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (ScratchImage* presult = &result)
			{
				HResult ret = Resize2Native(srcImages, nimages, metadata, width, height, filter, (ScratchImage*)presult);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (ScratchImage* presult = &result)
				{
					HResult ret = Resize2Native((Image*)psrcImages, nimages, metadata, width, height, filter, (ScratchImage*)presult);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				fixed (ScratchImage* presult = &result)
				{
					HResult ret = Resize2Native(srcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, (ScratchImage*)presult);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					fixed (ScratchImage* presult = &result)
					{
						HResult ret = Resize2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, (ScratchImage*)presult);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				fixed (ScratchImage* presult = &result)
				{
					HResult ret = Resize2Native(srcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, (ScratchImage*)presult);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] ulong width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					fixed (ScratchImage* presult = &result)
					{
						HResult ret = Resize2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, (ScratchImage*)presult);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (ScratchImage* presult = &result)
			{
				HResult ret = Resize2Native(srcImages, nimages, metadata, width, height, filter, (ScratchImage*)presult);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (ScratchImage* presult = &result)
				{
					HResult ret = Resize2Native((Image*)psrcImages, nimages, metadata, width, height, filter, (ScratchImage*)presult);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (ScratchImage* presult = &result)
			{
				HResult ret = Resize2Native(srcImages, nimages, metadata, width, height, filter, (ScratchImage*)presult);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (ScratchImage* presult = &result)
				{
					HResult ret = Resize2Native((Image*)psrcImages, nimages, metadata, width, height, filter, (ScratchImage*)presult);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				fixed (ScratchImage* presult = &result)
				{
					HResult ret = Resize2Native(srcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, (ScratchImage*)presult);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					fixed (ScratchImage* presult = &result)
					{
						HResult ret = Resize2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, (ScratchImage*)presult);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				fixed (ScratchImage* presult = &result)
				{
					HResult ret = Resize2Native(srcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, (ScratchImage*)presult);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Resize2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Resize2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "width")] [NativeName(NativeNameType.Type, "size_t")] nuint width, [NativeName(NativeNameType.Param, "height")] [NativeName(NativeNameType.Type, "size_t")] nuint height, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					fixed (ScratchImage* presult = &result)
					{
						HResult ret = Resize2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, width, height, filter, (ScratchImage*)presult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Convert")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		internal static HResult ConvertNative([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] Image* srcImage, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* image)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<Image*, int, TexFilterFlags, float, ScratchImage*, HResult>)vt[98])(srcImage, format, filter, threshold, image);
			#else
			return (HResult)((delegate* unmanaged[Cdecl]<nint, int, TexFilterFlags, float, nint, HResult>)vt[98])((nint)srcImage, format, filter, threshold, (nint)image);
			#endif
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Convert")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Convert([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] Image* srcImage, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* image)
		{
			HResult ret = ConvertNative(srcImage, format, filter, threshold, image);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Convert")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Convert([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] ref Image srcImage, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* image)
		{
			fixed (Image* psrcImage = &srcImage)
			{
				HResult ret = ConvertNative((Image*)psrcImage, format, filter, threshold, image);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Convert")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Convert([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] Image* srcImage, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage image)
		{
			fixed (ScratchImage* pimage = &image)
			{
				HResult ret = ConvertNative(srcImage, format, filter, threshold, (ScratchImage*)pimage);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Convert")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Convert([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] ref Image srcImage, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage image)
		{
			fixed (Image* psrcImage = &srcImage)
			{
				fixed (ScratchImage* pimage = &image)
				{
					HResult ret = ConvertNative((Image*)psrcImage, format, filter, threshold, (ScratchImage*)pimage);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Convert2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		internal static HResult Convert2Native([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<Image*, ulong, TexMetadata*, int, TexFilterFlags, float, ScratchImage*, HResult>)vt[99])(srcImages, nimages, metadata, format, filter, threshold, result);
			#else
			return (HResult)((delegate* unmanaged[Cdecl]<nint, ulong, nint, int, TexFilterFlags, float, nint, HResult>)vt[99])((nint)srcImages, nimages, (nint)metadata, format, filter, threshold, (nint)result);
			#endif
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Convert2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Convert2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			HResult ret = Convert2Native(srcImages, nimages, metadata, format, filter, threshold, result);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Convert2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Convert2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				HResult ret = Convert2Native((Image*)psrcImages, nimages, metadata, format, filter, threshold, result);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Convert2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Convert2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			HResult ret = Convert2Native(srcImages, nimages, metadata, format, filter, threshold, result);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Convert2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Convert2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				HResult ret = Convert2Native((Image*)psrcImages, nimages, metadata, format, filter, threshold, result);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Convert2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Convert2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				HResult ret = Convert2Native(srcImages, nimages, (TexMetadata*)pmetadata, format, filter, threshold, result);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Convert2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Convert2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = Convert2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, format, filter, threshold, result);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Convert2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Convert2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				HResult ret = Convert2Native(srcImages, nimages, (TexMetadata*)pmetadata, format, filter, threshold, result);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Convert2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Convert2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = Convert2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, format, filter, threshold, result);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Convert2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Convert2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (ScratchImage* presult = &result)
			{
				HResult ret = Convert2Native(srcImages, nimages, metadata, format, filter, threshold, (ScratchImage*)presult);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Convert2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Convert2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (ScratchImage* presult = &result)
				{
					HResult ret = Convert2Native((Image*)psrcImages, nimages, metadata, format, filter, threshold, (ScratchImage*)presult);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Convert2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Convert2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (ScratchImage* presult = &result)
			{
				HResult ret = Convert2Native(srcImages, nimages, metadata, format, filter, threshold, (ScratchImage*)presult);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Convert2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Convert2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (ScratchImage* presult = &result)
				{
					HResult ret = Convert2Native((Image*)psrcImages, nimages, metadata, format, filter, threshold, (ScratchImage*)presult);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Convert2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Convert2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				fixed (ScratchImage* presult = &result)
				{
					HResult ret = Convert2Native(srcImages, nimages, (TexMetadata*)pmetadata, format, filter, threshold, (ScratchImage*)presult);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Convert2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Convert2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					fixed (ScratchImage* presult = &result)
					{
						HResult ret = Convert2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, format, filter, threshold, (ScratchImage*)presult);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Convert2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Convert2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				fixed (ScratchImage* presult = &result)
				{
					HResult ret = Convert2Native(srcImages, nimages, (TexMetadata*)pmetadata, format, filter, threshold, (ScratchImage*)presult);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Convert2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Convert2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					fixed (ScratchImage* presult = &result)
					{
						HResult ret = Convert2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, format, filter, threshold, (ScratchImage*)presult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Convert the image to a new format<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ConvertToSinglePlane")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		internal static HResult ConvertToSinglePlaneNative([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] Image* srcImage, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* image)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<Image*, ScratchImage*, HResult>)vt[100])(srcImage, image);
			#else
			return (HResult)((delegate* unmanaged[Cdecl]<nint, nint, HResult>)vt[100])((nint)srcImage, (nint)image);
			#endif
		}

		/// <summary>/// Convert the image to a new format<br/>/// </summary>		[NativeName(NativeNameType.Func, "ConvertToSinglePlane")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ConvertToSinglePlane([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] Image* srcImage, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* image)
		{
			HResult ret = ConvertToSinglePlaneNative(srcImage, image);
			return ret;
		}

		/// <summary>/// Convert the image to a new format<br/>/// </summary>		[NativeName(NativeNameType.Func, "ConvertToSinglePlane")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ConvertToSinglePlane([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] ref Image srcImage, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* image)
		{
			fixed (Image* psrcImage = &srcImage)
			{
				HResult ret = ConvertToSinglePlaneNative((Image*)psrcImage, image);
				return ret;
			}
		}

		/// <summary>/// Convert the image to a new format<br/>/// </summary>		[NativeName(NativeNameType.Func, "ConvertToSinglePlane")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ConvertToSinglePlane([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] Image* srcImage, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage image)
		{
			fixed (ScratchImage* pimage = &image)
			{
				HResult ret = ConvertToSinglePlaneNative(srcImage, (ScratchImage*)pimage);
				return ret;
			}
		}

		/// <summary>/// Convert the image to a new format<br/>/// </summary>		[NativeName(NativeNameType.Func, "ConvertToSinglePlane")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ConvertToSinglePlane([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] ref Image srcImage, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage image)
		{
			fixed (Image* psrcImage = &srcImage)
			{
				fixed (ScratchImage* pimage = &image)
				{
					HResult ret = ConvertToSinglePlaneNative((Image*)psrcImage, (ScratchImage*)pimage);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ConvertToSinglePlane2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		internal static HResult ConvertToSinglePlane2Native([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* image)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<Image*, ulong, TexMetadata*, ScratchImage*, HResult>)vt[101])(srcImages, nimages, metadata, image);
			#else
			return (HResult)((delegate* unmanaged[Cdecl]<nint, ulong, nint, nint, HResult>)vt[101])((nint)srcImages, nimages, (nint)metadata, (nint)image);
			#endif
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "ConvertToSinglePlane2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ConvertToSinglePlane2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* image)
		{
			HResult ret = ConvertToSinglePlane2Native(srcImages, nimages, metadata, image);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "ConvertToSinglePlane2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ConvertToSinglePlane2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* image)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				HResult ret = ConvertToSinglePlane2Native((Image*)psrcImages, nimages, metadata, image);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "ConvertToSinglePlane2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ConvertToSinglePlane2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* image)
		{
			HResult ret = ConvertToSinglePlane2Native(srcImages, nimages, metadata, image);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "ConvertToSinglePlane2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ConvertToSinglePlane2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* image)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				HResult ret = ConvertToSinglePlane2Native((Image*)psrcImages, nimages, metadata, image);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "ConvertToSinglePlane2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ConvertToSinglePlane2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* image)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				HResult ret = ConvertToSinglePlane2Native(srcImages, nimages, (TexMetadata*)pmetadata, image);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "ConvertToSinglePlane2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ConvertToSinglePlane2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* image)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = ConvertToSinglePlane2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, image);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "ConvertToSinglePlane2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ConvertToSinglePlane2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* image)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				HResult ret = ConvertToSinglePlane2Native(srcImages, nimages, (TexMetadata*)pmetadata, image);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "ConvertToSinglePlane2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ConvertToSinglePlane2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* image)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = ConvertToSinglePlane2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, image);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "ConvertToSinglePlane2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ConvertToSinglePlane2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage image)
		{
			fixed (ScratchImage* pimage = &image)
			{
				HResult ret = ConvertToSinglePlane2Native(srcImages, nimages, metadata, (ScratchImage*)pimage);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "ConvertToSinglePlane2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ConvertToSinglePlane2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage image)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (ScratchImage* pimage = &image)
				{
					HResult ret = ConvertToSinglePlane2Native((Image*)psrcImages, nimages, metadata, (ScratchImage*)pimage);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "ConvertToSinglePlane2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ConvertToSinglePlane2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage image)
		{
			fixed (ScratchImage* pimage = &image)
			{
				HResult ret = ConvertToSinglePlane2Native(srcImages, nimages, metadata, (ScratchImage*)pimage);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "ConvertToSinglePlane2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ConvertToSinglePlane2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage image)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (ScratchImage* pimage = &image)
				{
					HResult ret = ConvertToSinglePlane2Native((Image*)psrcImages, nimages, metadata, (ScratchImage*)pimage);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "ConvertToSinglePlane2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ConvertToSinglePlane2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage image)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				fixed (ScratchImage* pimage = &image)
				{
					HResult ret = ConvertToSinglePlane2Native(srcImages, nimages, (TexMetadata*)pmetadata, (ScratchImage*)pimage);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "ConvertToSinglePlane2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ConvertToSinglePlane2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage image)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					fixed (ScratchImage* pimage = &image)
					{
						HResult ret = ConvertToSinglePlane2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, (ScratchImage*)pimage);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "ConvertToSinglePlane2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ConvertToSinglePlane2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage image)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				fixed (ScratchImage* pimage = &image)
				{
					HResult ret = ConvertToSinglePlane2Native(srcImages, nimages, (TexMetadata*)pmetadata, (ScratchImage*)pimage);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "ConvertToSinglePlane2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ConvertToSinglePlane2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage image)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					fixed (ScratchImage* pimage = &image)
					{
						HResult ret = ConvertToSinglePlane2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, (ScratchImage*)pimage);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Converts the image from a planar format to an equivalent non-planar format<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "GenerateMipMaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		internal static HResult GenerateMipMapsNative([NativeName(NativeNameType.Param, "baseImage")] [NativeName(NativeNameType.Type, "Image const&")] Image* baseImage, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain, [NativeName(NativeNameType.Param, "allow1D")] [NativeName(NativeNameType.Type, "bool")] byte allow1D)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<Image*, TexFilterFlags, ulong, ScratchImage*, byte, HResult>)vt[102])(baseImage, filter, levels, mipChain, allow1D);
			#else
			return (HResult)((delegate* unmanaged[Cdecl]<nint, TexFilterFlags, ulong, nint, byte, HResult>)vt[102])((nint)baseImage, filter, levels, (nint)mipChain, allow1D);
			#endif
		}

		/// <summary>/// Converts the image from a planar format to an equivalent non-planar format<br/>/// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps([NativeName(NativeNameType.Param, "baseImage")] [NativeName(NativeNameType.Type, "Image const&")] Image* baseImage, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain, [NativeName(NativeNameType.Param, "allow1D")] [NativeName(NativeNameType.Type, "bool")] bool allow1D)
		{
			HResult ret = GenerateMipMapsNative(baseImage, filter, levels, mipChain, allow1D ? (byte)1 : (byte)0);
			return ret;
		}

		/// <summary>/// Converts the image from a planar format to an equivalent non-planar format<br/>/// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps([NativeName(NativeNameType.Param, "baseImage")] [NativeName(NativeNameType.Type, "Image const&")] ref Image baseImage, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain, [NativeName(NativeNameType.Param, "allow1D")] [NativeName(NativeNameType.Type, "bool")] bool allow1D)
		{
			fixed (Image* pbaseImage = &baseImage)
			{
				HResult ret = GenerateMipMapsNative((Image*)pbaseImage, filter, levels, mipChain, allow1D ? (byte)1 : (byte)0);
				return ret;
			}
		}

		/// <summary>/// Converts the image from a planar format to an equivalent non-planar format<br/>/// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps([NativeName(NativeNameType.Param, "baseImage")] [NativeName(NativeNameType.Type, "Image const&")] Image* baseImage, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain, [NativeName(NativeNameType.Param, "allow1D")] [NativeName(NativeNameType.Type, "bool")] bool allow1D)
		{
			HResult ret = GenerateMipMapsNative(baseImage, filter, levels, mipChain, allow1D ? (byte)1 : (byte)0);
			return ret;
		}

		/// <summary>/// Converts the image from a planar format to an equivalent non-planar format<br/>/// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps([NativeName(NativeNameType.Param, "baseImage")] [NativeName(NativeNameType.Type, "Image const&")] ref Image baseImage, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain, [NativeName(NativeNameType.Param, "allow1D")] [NativeName(NativeNameType.Type, "bool")] bool allow1D)
		{
			fixed (Image* pbaseImage = &baseImage)
			{
				HResult ret = GenerateMipMapsNative((Image*)pbaseImage, filter, levels, mipChain, allow1D ? (byte)1 : (byte)0);
				return ret;
			}
		}

		/// <summary>/// Converts the image from a planar format to an equivalent non-planar format<br/>/// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps([NativeName(NativeNameType.Param, "baseImage")] [NativeName(NativeNameType.Type, "Image const&")] Image* baseImage, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain, [NativeName(NativeNameType.Param, "allow1D")] [NativeName(NativeNameType.Type, "bool")] bool allow1D)
		{
			fixed (ScratchImage* pmipChain = &mipChain)
			{
				HResult ret = GenerateMipMapsNative(baseImage, filter, levels, (ScratchImage*)pmipChain, allow1D ? (byte)1 : (byte)0);
				return ret;
			}
		}

		/// <summary>/// Converts the image from a planar format to an equivalent non-planar format<br/>/// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps([NativeName(NativeNameType.Param, "baseImage")] [NativeName(NativeNameType.Type, "Image const&")] ref Image baseImage, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain, [NativeName(NativeNameType.Param, "allow1D")] [NativeName(NativeNameType.Type, "bool")] bool allow1D)
		{
			fixed (Image* pbaseImage = &baseImage)
			{
				fixed (ScratchImage* pmipChain = &mipChain)
				{
					HResult ret = GenerateMipMapsNative((Image*)pbaseImage, filter, levels, (ScratchImage*)pmipChain, allow1D ? (byte)1 : (byte)0);
					return ret;
				}
			}
		}

		/// <summary>/// Converts the image from a planar format to an equivalent non-planar format<br/>/// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps([NativeName(NativeNameType.Param, "baseImage")] [NativeName(NativeNameType.Type, "Image const&")] Image* baseImage, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain, [NativeName(NativeNameType.Param, "allow1D")] [NativeName(NativeNameType.Type, "bool")] bool allow1D)
		{
			fixed (ScratchImage* pmipChain = &mipChain)
			{
				HResult ret = GenerateMipMapsNative(baseImage, filter, levels, (ScratchImage*)pmipChain, allow1D ? (byte)1 : (byte)0);
				return ret;
			}
		}

		/// <summary>/// Converts the image from a planar format to an equivalent non-planar format<br/>/// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps([NativeName(NativeNameType.Param, "baseImage")] [NativeName(NativeNameType.Type, "Image const&")] ref Image baseImage, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain, [NativeName(NativeNameType.Param, "allow1D")] [NativeName(NativeNameType.Type, "bool")] bool allow1D)
		{
			fixed (Image* pbaseImage = &baseImage)
			{
				fixed (ScratchImage* pmipChain = &mipChain)
				{
					HResult ret = GenerateMipMapsNative((Image*)pbaseImage, filter, levels, (ScratchImage*)pmipChain, allow1D ? (byte)1 : (byte)0);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		internal static HResult GenerateMipMaps2Native([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<Image*, ulong, TexMetadata*, TexFilterFlags, ulong, ScratchImage*, HResult>)vt[103])(srcImages, nimages, metadata, filter, levels, mipChain);
			#else
			return (HResult)((delegate* unmanaged[Cdecl]<nint, ulong, nint, TexFilterFlags, ulong, nint, HResult>)vt[103])((nint)srcImages, nimages, (nint)metadata, filter, levels, (nint)mipChain);
			#endif
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			HResult ret = GenerateMipMaps2Native(srcImages, nimages, metadata, filter, levels, mipChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				HResult ret = GenerateMipMaps2Native((Image*)psrcImages, nimages, metadata, filter, levels, mipChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			HResult ret = GenerateMipMaps2Native(srcImages, nimages, metadata, filter, levels, mipChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				HResult ret = GenerateMipMaps2Native((Image*)psrcImages, nimages, metadata, filter, levels, mipChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				HResult ret = GenerateMipMaps2Native(srcImages, nimages, (TexMetadata*)pmetadata, filter, levels, mipChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = GenerateMipMaps2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, filter, levels, mipChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				HResult ret = GenerateMipMaps2Native(srcImages, nimages, (TexMetadata*)pmetadata, filter, levels, mipChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = GenerateMipMaps2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, filter, levels, mipChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			HResult ret = GenerateMipMaps2Native(srcImages, nimages, metadata, filter, levels, mipChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				HResult ret = GenerateMipMaps2Native((Image*)psrcImages, nimages, metadata, filter, levels, mipChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			HResult ret = GenerateMipMaps2Native(srcImages, nimages, metadata, filter, levels, mipChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				HResult ret = GenerateMipMaps2Native((Image*)psrcImages, nimages, metadata, filter, levels, mipChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				HResult ret = GenerateMipMaps2Native(srcImages, nimages, (TexMetadata*)pmetadata, filter, levels, mipChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = GenerateMipMaps2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, filter, levels, mipChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				HResult ret = GenerateMipMaps2Native(srcImages, nimages, (TexMetadata*)pmetadata, filter, levels, mipChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = GenerateMipMaps2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, filter, levels, mipChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (ScratchImage* pmipChain = &mipChain)
			{
				HResult ret = GenerateMipMaps2Native(srcImages, nimages, metadata, filter, levels, (ScratchImage*)pmipChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (ScratchImage* pmipChain = &mipChain)
				{
					HResult ret = GenerateMipMaps2Native((Image*)psrcImages, nimages, metadata, filter, levels, (ScratchImage*)pmipChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (ScratchImage* pmipChain = &mipChain)
			{
				HResult ret = GenerateMipMaps2Native(srcImages, nimages, metadata, filter, levels, (ScratchImage*)pmipChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (ScratchImage* pmipChain = &mipChain)
				{
					HResult ret = GenerateMipMaps2Native((Image*)psrcImages, nimages, metadata, filter, levels, (ScratchImage*)pmipChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				fixed (ScratchImage* pmipChain = &mipChain)
				{
					HResult ret = GenerateMipMaps2Native(srcImages, nimages, (TexMetadata*)pmetadata, filter, levels, (ScratchImage*)pmipChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					fixed (ScratchImage* pmipChain = &mipChain)
					{
						HResult ret = GenerateMipMaps2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, filter, levels, (ScratchImage*)pmipChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				fixed (ScratchImage* pmipChain = &mipChain)
				{
					HResult ret = GenerateMipMaps2Native(srcImages, nimages, (TexMetadata*)pmetadata, filter, levels, (ScratchImage*)pmipChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					fixed (ScratchImage* pmipChain = &mipChain)
					{
						HResult ret = GenerateMipMaps2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, filter, levels, (ScratchImage*)pmipChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (ScratchImage* pmipChain = &mipChain)
			{
				HResult ret = GenerateMipMaps2Native(srcImages, nimages, metadata, filter, levels, (ScratchImage*)pmipChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (ScratchImage* pmipChain = &mipChain)
				{
					HResult ret = GenerateMipMaps2Native((Image*)psrcImages, nimages, metadata, filter, levels, (ScratchImage*)pmipChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (ScratchImage* pmipChain = &mipChain)
			{
				HResult ret = GenerateMipMaps2Native(srcImages, nimages, metadata, filter, levels, (ScratchImage*)pmipChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (ScratchImage* pmipChain = &mipChain)
				{
					HResult ret = GenerateMipMaps2Native((Image*)psrcImages, nimages, metadata, filter, levels, (ScratchImage*)pmipChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				fixed (ScratchImage* pmipChain = &mipChain)
				{
					HResult ret = GenerateMipMaps2Native(srcImages, nimages, (TexMetadata*)pmetadata, filter, levels, (ScratchImage*)pmipChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					fixed (ScratchImage* pmipChain = &mipChain)
					{
						HResult ret = GenerateMipMaps2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, filter, levels, (ScratchImage*)pmipChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				fixed (ScratchImage* pmipChain = &mipChain)
				{
					HResult ret = GenerateMipMaps2Native(srcImages, nimages, (TexMetadata*)pmetadata, filter, levels, (ScratchImage*)pmipChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					fixed (ScratchImage* pmipChain = &mipChain)
					{
						HResult ret = GenerateMipMaps2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, filter, levels, (ScratchImage*)pmipChain);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>
		/// Defaults to Fant filtering which is equivalent to a box filter<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "GenerateMipMaps3D")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		internal static HResult GenerateMipMaps3DNative([NativeName(NativeNameType.Param, "baseImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* baseImages, [NativeName(NativeNameType.Param, "depth")] [NativeName(NativeNameType.Type, "size_t")] ulong depth, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<Image*, ulong, TexFilterFlags, ulong, ScratchImage*, HResult>)vt[104])(baseImages, depth, filter, levels, mipChain);
			#else
			return (HResult)((delegate* unmanaged[Cdecl]<nint, ulong, TexFilterFlags, ulong, nint, HResult>)vt[104])((nint)baseImages, depth, filter, levels, (nint)mipChain);
			#endif
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D([NativeName(NativeNameType.Param, "baseImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* baseImages, [NativeName(NativeNameType.Param, "depth")] [NativeName(NativeNameType.Type, "size_t")] ulong depth, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			HResult ret = GenerateMipMaps3DNative(baseImages, depth, filter, levels, mipChain);
			return ret;
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D([NativeName(NativeNameType.Param, "baseImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image baseImages, [NativeName(NativeNameType.Param, "depth")] [NativeName(NativeNameType.Type, "size_t")] ulong depth, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (Image* pbaseImages = &baseImages)
			{
				HResult ret = GenerateMipMaps3DNative((Image*)pbaseImages, depth, filter, levels, mipChain);
				return ret;
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D([NativeName(NativeNameType.Param, "baseImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* baseImages, [NativeName(NativeNameType.Param, "depth")] [NativeName(NativeNameType.Type, "size_t")] nuint depth, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			HResult ret = GenerateMipMaps3DNative(baseImages, depth, filter, levels, mipChain);
			return ret;
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D([NativeName(NativeNameType.Param, "baseImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image baseImages, [NativeName(NativeNameType.Param, "depth")] [NativeName(NativeNameType.Type, "size_t")] nuint depth, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (Image* pbaseImages = &baseImages)
			{
				HResult ret = GenerateMipMaps3DNative((Image*)pbaseImages, depth, filter, levels, mipChain);
				return ret;
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D([NativeName(NativeNameType.Param, "baseImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* baseImages, [NativeName(NativeNameType.Param, "depth")] [NativeName(NativeNameType.Type, "size_t")] ulong depth, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			HResult ret = GenerateMipMaps3DNative(baseImages, depth, filter, levels, mipChain);
			return ret;
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D([NativeName(NativeNameType.Param, "baseImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image baseImages, [NativeName(NativeNameType.Param, "depth")] [NativeName(NativeNameType.Type, "size_t")] ulong depth, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (Image* pbaseImages = &baseImages)
			{
				HResult ret = GenerateMipMaps3DNative((Image*)pbaseImages, depth, filter, levels, mipChain);
				return ret;
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D([NativeName(NativeNameType.Param, "baseImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* baseImages, [NativeName(NativeNameType.Param, "depth")] [NativeName(NativeNameType.Type, "size_t")] nuint depth, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			HResult ret = GenerateMipMaps3DNative(baseImages, depth, filter, levels, mipChain);
			return ret;
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D([NativeName(NativeNameType.Param, "baseImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image baseImages, [NativeName(NativeNameType.Param, "depth")] [NativeName(NativeNameType.Type, "size_t")] nuint depth, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (Image* pbaseImages = &baseImages)
			{
				HResult ret = GenerateMipMaps3DNative((Image*)pbaseImages, depth, filter, levels, mipChain);
				return ret;
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D([NativeName(NativeNameType.Param, "baseImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* baseImages, [NativeName(NativeNameType.Param, "depth")] [NativeName(NativeNameType.Type, "size_t")] ulong depth, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (ScratchImage* pmipChain = &mipChain)
			{
				HResult ret = GenerateMipMaps3DNative(baseImages, depth, filter, levels, (ScratchImage*)pmipChain);
				return ret;
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D([NativeName(NativeNameType.Param, "baseImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image baseImages, [NativeName(NativeNameType.Param, "depth")] [NativeName(NativeNameType.Type, "size_t")] ulong depth, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (Image* pbaseImages = &baseImages)
			{
				fixed (ScratchImage* pmipChain = &mipChain)
				{
					HResult ret = GenerateMipMaps3DNative((Image*)pbaseImages, depth, filter, levels, (ScratchImage*)pmipChain);
					return ret;
				}
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D([NativeName(NativeNameType.Param, "baseImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* baseImages, [NativeName(NativeNameType.Param, "depth")] [NativeName(NativeNameType.Type, "size_t")] nuint depth, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (ScratchImage* pmipChain = &mipChain)
			{
				HResult ret = GenerateMipMaps3DNative(baseImages, depth, filter, levels, (ScratchImage*)pmipChain);
				return ret;
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D([NativeName(NativeNameType.Param, "baseImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image baseImages, [NativeName(NativeNameType.Param, "depth")] [NativeName(NativeNameType.Type, "size_t")] nuint depth, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (Image* pbaseImages = &baseImages)
			{
				fixed (ScratchImage* pmipChain = &mipChain)
				{
					HResult ret = GenerateMipMaps3DNative((Image*)pbaseImages, depth, filter, levels, (ScratchImage*)pmipChain);
					return ret;
				}
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D([NativeName(NativeNameType.Param, "baseImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* baseImages, [NativeName(NativeNameType.Param, "depth")] [NativeName(NativeNameType.Type, "size_t")] ulong depth, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (ScratchImage* pmipChain = &mipChain)
			{
				HResult ret = GenerateMipMaps3DNative(baseImages, depth, filter, levels, (ScratchImage*)pmipChain);
				return ret;
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D([NativeName(NativeNameType.Param, "baseImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image baseImages, [NativeName(NativeNameType.Param, "depth")] [NativeName(NativeNameType.Type, "size_t")] ulong depth, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (Image* pbaseImages = &baseImages)
			{
				fixed (ScratchImage* pmipChain = &mipChain)
				{
					HResult ret = GenerateMipMaps3DNative((Image*)pbaseImages, depth, filter, levels, (ScratchImage*)pmipChain);
					return ret;
				}
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D([NativeName(NativeNameType.Param, "baseImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* baseImages, [NativeName(NativeNameType.Param, "depth")] [NativeName(NativeNameType.Type, "size_t")] nuint depth, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (ScratchImage* pmipChain = &mipChain)
			{
				HResult ret = GenerateMipMaps3DNative(baseImages, depth, filter, levels, (ScratchImage*)pmipChain);
				return ret;
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D([NativeName(NativeNameType.Param, "baseImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image baseImages, [NativeName(NativeNameType.Param, "depth")] [NativeName(NativeNameType.Type, "size_t")] nuint depth, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (Image* pbaseImages = &baseImages)
			{
				fixed (ScratchImage* pmipChain = &mipChain)
				{
					HResult ret = GenerateMipMaps3DNative((Image*)pbaseImages, depth, filter, levels, (ScratchImage*)pmipChain);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GenerateMipMaps3D2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		internal static HResult GenerateMipMaps3D2Native([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<Image*, ulong, TexFilterFlags, ulong, ScratchImage*, HResult>)vt[105])(srcImages, nimages, filter, levels, mipChain);
			#else
			return (HResult)((delegate* unmanaged[Cdecl]<nint, ulong, TexFilterFlags, ulong, nint, HResult>)vt[105])((nint)srcImages, nimages, filter, levels, (nint)mipChain);
			#endif
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			HResult ret = GenerateMipMaps3D2Native(srcImages, nimages, filter, levels, mipChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				HResult ret = GenerateMipMaps3D2Native((Image*)psrcImages, nimages, filter, levels, mipChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			HResult ret = GenerateMipMaps3D2Native(srcImages, nimages, filter, levels, mipChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				HResult ret = GenerateMipMaps3D2Native((Image*)psrcImages, nimages, filter, levels, mipChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			HResult ret = GenerateMipMaps3D2Native(srcImages, nimages, filter, levels, mipChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				HResult ret = GenerateMipMaps3D2Native((Image*)psrcImages, nimages, filter, levels, mipChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			HResult ret = GenerateMipMaps3D2Native(srcImages, nimages, filter, levels, mipChain);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				HResult ret = GenerateMipMaps3D2Native((Image*)psrcImages, nimages, filter, levels, mipChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (ScratchImage* pmipChain = &mipChain)
			{
				HResult ret = GenerateMipMaps3D2Native(srcImages, nimages, filter, levels, (ScratchImage*)pmipChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (ScratchImage* pmipChain = &mipChain)
				{
					HResult ret = GenerateMipMaps3D2Native((Image*)psrcImages, nimages, filter, levels, (ScratchImage*)pmipChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (ScratchImage* pmipChain = &mipChain)
			{
				HResult ret = GenerateMipMaps3D2Native(srcImages, nimages, filter, levels, (ScratchImage*)pmipChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] ulong levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (ScratchImage* pmipChain = &mipChain)
				{
					HResult ret = GenerateMipMaps3D2Native((Image*)psrcImages, nimages, filter, levels, (ScratchImage*)pmipChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (ScratchImage* pmipChain = &mipChain)
			{
				HResult ret = GenerateMipMaps3D2Native(srcImages, nimages, filter, levels, (ScratchImage*)pmipChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (ScratchImage* pmipChain = &mipChain)
				{
					HResult ret = GenerateMipMaps3D2Native((Image*)psrcImages, nimages, filter, levels, (ScratchImage*)pmipChain);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (ScratchImage* pmipChain = &mipChain)
			{
				HResult ret = GenerateMipMaps3D2Native(srcImages, nimages, filter, levels, (ScratchImage*)pmipChain);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "GenerateMipMaps3D2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult GenerateMipMaps3D2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "filter")] [NativeName(NativeNameType.Type, "TEX_FILTER_FLAGS")] TexFilterFlags filter, [NativeName(NativeNameType.Param, "levels")] [NativeName(NativeNameType.Type, "size_t")] nuint levels, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (ScratchImage* pmipChain = &mipChain)
				{
					HResult ret = GenerateMipMaps3D2Native((Image*)psrcImages, nimages, filter, levels, (ScratchImage*)pmipChain);
					return ret;
				}
			}
		}

		/// <summary>
		/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>
		/// Defaults to Fant filtering which is equivalent to a box filter<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		internal static HResult ScaleMipMapsAlphaForCoverageNative([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] ulong item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<Image*, ulong, TexMetadata*, ulong, float, ScratchImage*, HResult>)vt[106])(srcImages, nimages, metadata, item, alphaReference, mipChain);
			#else
			return (HResult)((delegate* unmanaged[Cdecl]<nint, ulong, nint, ulong, float, nint, HResult>)vt[106])((nint)srcImages, nimages, (nint)metadata, item, alphaReference, (nint)mipChain);
			#endif
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] ulong item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			HResult ret = ScaleMipMapsAlphaForCoverageNative(srcImages, nimages, metadata, item, alphaReference, mipChain);
			return ret;
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] ulong item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				HResult ret = ScaleMipMapsAlphaForCoverageNative((Image*)psrcImages, nimages, metadata, item, alphaReference, mipChain);
				return ret;
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] ulong item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			HResult ret = ScaleMipMapsAlphaForCoverageNative(srcImages, nimages, metadata, item, alphaReference, mipChain);
			return ret;
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] ulong item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				HResult ret = ScaleMipMapsAlphaForCoverageNative((Image*)psrcImages, nimages, metadata, item, alphaReference, mipChain);
				return ret;
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] ulong item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				HResult ret = ScaleMipMapsAlphaForCoverageNative(srcImages, nimages, (TexMetadata*)pmetadata, item, alphaReference, mipChain);
				return ret;
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] ulong item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = ScaleMipMapsAlphaForCoverageNative((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, item, alphaReference, mipChain);
					return ret;
				}
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] ulong item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				HResult ret = ScaleMipMapsAlphaForCoverageNative(srcImages, nimages, (TexMetadata*)pmetadata, item, alphaReference, mipChain);
				return ret;
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] ulong item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = ScaleMipMapsAlphaForCoverageNative((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, item, alphaReference, mipChain);
					return ret;
				}
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] nuint item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			HResult ret = ScaleMipMapsAlphaForCoverageNative(srcImages, nimages, metadata, item, alphaReference, mipChain);
			return ret;
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] nuint item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				HResult ret = ScaleMipMapsAlphaForCoverageNative((Image*)psrcImages, nimages, metadata, item, alphaReference, mipChain);
				return ret;
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] nuint item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			HResult ret = ScaleMipMapsAlphaForCoverageNative(srcImages, nimages, metadata, item, alphaReference, mipChain);
			return ret;
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] nuint item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				HResult ret = ScaleMipMapsAlphaForCoverageNative((Image*)psrcImages, nimages, metadata, item, alphaReference, mipChain);
				return ret;
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] nuint item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				HResult ret = ScaleMipMapsAlphaForCoverageNative(srcImages, nimages, (TexMetadata*)pmetadata, item, alphaReference, mipChain);
				return ret;
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] nuint item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = ScaleMipMapsAlphaForCoverageNative((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, item, alphaReference, mipChain);
					return ret;
				}
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] nuint item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				HResult ret = ScaleMipMapsAlphaForCoverageNative(srcImages, nimages, (TexMetadata*)pmetadata, item, alphaReference, mipChain);
				return ret;
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] nuint item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = ScaleMipMapsAlphaForCoverageNative((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, item, alphaReference, mipChain);
					return ret;
				}
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] ulong item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (ScratchImage* pmipChain = &mipChain)
			{
				HResult ret = ScaleMipMapsAlphaForCoverageNative(srcImages, nimages, metadata, item, alphaReference, (ScratchImage*)pmipChain);
				return ret;
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] ulong item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (ScratchImage* pmipChain = &mipChain)
				{
					HResult ret = ScaleMipMapsAlphaForCoverageNative((Image*)psrcImages, nimages, metadata, item, alphaReference, (ScratchImage*)pmipChain);
					return ret;
				}
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] ulong item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (ScratchImage* pmipChain = &mipChain)
			{
				HResult ret = ScaleMipMapsAlphaForCoverageNative(srcImages, nimages, metadata, item, alphaReference, (ScratchImage*)pmipChain);
				return ret;
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] ulong item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (ScratchImage* pmipChain = &mipChain)
				{
					HResult ret = ScaleMipMapsAlphaForCoverageNative((Image*)psrcImages, nimages, metadata, item, alphaReference, (ScratchImage*)pmipChain);
					return ret;
				}
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] ulong item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				fixed (ScratchImage* pmipChain = &mipChain)
				{
					HResult ret = ScaleMipMapsAlphaForCoverageNative(srcImages, nimages, (TexMetadata*)pmetadata, item, alphaReference, (ScratchImage*)pmipChain);
					return ret;
				}
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] ulong item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					fixed (ScratchImage* pmipChain = &mipChain)
					{
						HResult ret = ScaleMipMapsAlphaForCoverageNative((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, item, alphaReference, (ScratchImage*)pmipChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] ulong item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				fixed (ScratchImage* pmipChain = &mipChain)
				{
					HResult ret = ScaleMipMapsAlphaForCoverageNative(srcImages, nimages, (TexMetadata*)pmetadata, item, alphaReference, (ScratchImage*)pmipChain);
					return ret;
				}
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] ulong item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					fixed (ScratchImage* pmipChain = &mipChain)
					{
						HResult ret = ScaleMipMapsAlphaForCoverageNative((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, item, alphaReference, (ScratchImage*)pmipChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] nuint item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (ScratchImage* pmipChain = &mipChain)
			{
				HResult ret = ScaleMipMapsAlphaForCoverageNative(srcImages, nimages, metadata, item, alphaReference, (ScratchImage*)pmipChain);
				return ret;
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] nuint item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (ScratchImage* pmipChain = &mipChain)
				{
					HResult ret = ScaleMipMapsAlphaForCoverageNative((Image*)psrcImages, nimages, metadata, item, alphaReference, (ScratchImage*)pmipChain);
					return ret;
				}
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] nuint item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (ScratchImage* pmipChain = &mipChain)
			{
				HResult ret = ScaleMipMapsAlphaForCoverageNative(srcImages, nimages, metadata, item, alphaReference, (ScratchImage*)pmipChain);
				return ret;
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] nuint item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (ScratchImage* pmipChain = &mipChain)
				{
					HResult ret = ScaleMipMapsAlphaForCoverageNative((Image*)psrcImages, nimages, metadata, item, alphaReference, (ScratchImage*)pmipChain);
					return ret;
				}
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] nuint item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				fixed (ScratchImage* pmipChain = &mipChain)
				{
					HResult ret = ScaleMipMapsAlphaForCoverageNative(srcImages, nimages, (TexMetadata*)pmetadata, item, alphaReference, (ScratchImage*)pmipChain);
					return ret;
				}
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] nuint item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					fixed (ScratchImage* pmipChain = &mipChain)
					{
						HResult ret = ScaleMipMapsAlphaForCoverageNative((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, item, alphaReference, (ScratchImage*)pmipChain);
						return ret;
					}
				}
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] nuint item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				fixed (ScratchImage* pmipChain = &mipChain)
				{
					HResult ret = ScaleMipMapsAlphaForCoverageNative(srcImages, nimages, (TexMetadata*)pmetadata, item, alphaReference, (ScratchImage*)pmipChain);
					return ret;
				}
			}
		}

		/// <summary>/// levels of '0' indicates a full mipchain, otherwise is generates that number of total levels (including the source base image)<br/>/// Defaults to Fant filtering which is equivalent to a box filter<br/>/// </summary>		[NativeName(NativeNameType.Func, "ScaleMipMapsAlphaForCoverage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult ScaleMipMapsAlphaForCoverage([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "item")] [NativeName(NativeNameType.Type, "size_t")] nuint item, [NativeName(NativeNameType.Param, "alphaReference")] [NativeName(NativeNameType.Type, "float")] float alphaReference, [NativeName(NativeNameType.Param, "mipChain")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage mipChain)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					fixed (ScratchImage* pmipChain = &mipChain)
					{
						HResult ret = ScaleMipMapsAlphaForCoverageNative((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, item, alphaReference, (ScratchImage*)pmipChain);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "PremultiplyAlpha")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		internal static HResult PremultiplyAlphaNative([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] Image* srcImage, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_PMALPHA_FLAGS")] TexPMAlphaFlags flags, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* image)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<Image*, TexPMAlphaFlags, ScratchImage*, HResult>)vt[107])(srcImage, flags, image);
			#else
			return (HResult)((delegate* unmanaged[Cdecl]<nint, TexPMAlphaFlags, nint, HResult>)vt[107])((nint)srcImage, flags, (nint)image);
			#endif
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "PremultiplyAlpha")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult PremultiplyAlpha([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] Image* srcImage, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_PMALPHA_FLAGS")] TexPMAlphaFlags flags, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* image)
		{
			HResult ret = PremultiplyAlphaNative(srcImage, flags, image);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "PremultiplyAlpha")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult PremultiplyAlpha([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] ref Image srcImage, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_PMALPHA_FLAGS")] TexPMAlphaFlags flags, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* image)
		{
			fixed (Image* psrcImage = &srcImage)
			{
				HResult ret = PremultiplyAlphaNative((Image*)psrcImage, flags, image);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "PremultiplyAlpha")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult PremultiplyAlpha([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] Image* srcImage, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_PMALPHA_FLAGS")] TexPMAlphaFlags flags, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage image)
		{
			fixed (ScratchImage* pimage = &image)
			{
				HResult ret = PremultiplyAlphaNative(srcImage, flags, (ScratchImage*)pimage);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "PremultiplyAlpha")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult PremultiplyAlpha([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] ref Image srcImage, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_PMALPHA_FLAGS")] TexPMAlphaFlags flags, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage image)
		{
			fixed (Image* psrcImage = &srcImage)
			{
				fixed (ScratchImage* pimage = &image)
				{
					HResult ret = PremultiplyAlphaNative((Image*)psrcImage, flags, (ScratchImage*)pimage);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "PremultiplyAlpha2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		internal static HResult PremultiplyAlpha2Native([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_PMALPHA_FLAGS")] TexPMAlphaFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<Image*, ulong, TexMetadata*, TexPMAlphaFlags, ScratchImage*, HResult>)vt[108])(srcImages, nimages, metadata, flags, result);
			#else
			return (HResult)((delegate* unmanaged[Cdecl]<nint, ulong, nint, TexPMAlphaFlags, nint, HResult>)vt[108])((nint)srcImages, nimages, (nint)metadata, flags, (nint)result);
			#endif
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "PremultiplyAlpha2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult PremultiplyAlpha2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_PMALPHA_FLAGS")] TexPMAlphaFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			HResult ret = PremultiplyAlpha2Native(srcImages, nimages, metadata, flags, result);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "PremultiplyAlpha2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult PremultiplyAlpha2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_PMALPHA_FLAGS")] TexPMAlphaFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				HResult ret = PremultiplyAlpha2Native((Image*)psrcImages, nimages, metadata, flags, result);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "PremultiplyAlpha2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult PremultiplyAlpha2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_PMALPHA_FLAGS")] TexPMAlphaFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			HResult ret = PremultiplyAlpha2Native(srcImages, nimages, metadata, flags, result);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "PremultiplyAlpha2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult PremultiplyAlpha2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_PMALPHA_FLAGS")] TexPMAlphaFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				HResult ret = PremultiplyAlpha2Native((Image*)psrcImages, nimages, metadata, flags, result);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "PremultiplyAlpha2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult PremultiplyAlpha2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_PMALPHA_FLAGS")] TexPMAlphaFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				HResult ret = PremultiplyAlpha2Native(srcImages, nimages, (TexMetadata*)pmetadata, flags, result);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "PremultiplyAlpha2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult PremultiplyAlpha2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_PMALPHA_FLAGS")] TexPMAlphaFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = PremultiplyAlpha2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, flags, result);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "PremultiplyAlpha2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult PremultiplyAlpha2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_PMALPHA_FLAGS")] TexPMAlphaFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				HResult ret = PremultiplyAlpha2Native(srcImages, nimages, (TexMetadata*)pmetadata, flags, result);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "PremultiplyAlpha2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult PremultiplyAlpha2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_PMALPHA_FLAGS")] TexPMAlphaFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = PremultiplyAlpha2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, flags, result);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "PremultiplyAlpha2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult PremultiplyAlpha2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_PMALPHA_FLAGS")] TexPMAlphaFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (ScratchImage* presult = &result)
			{
				HResult ret = PremultiplyAlpha2Native(srcImages, nimages, metadata, flags, (ScratchImage*)presult);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "PremultiplyAlpha2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult PremultiplyAlpha2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_PMALPHA_FLAGS")] TexPMAlphaFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (ScratchImage* presult = &result)
				{
					HResult ret = PremultiplyAlpha2Native((Image*)psrcImages, nimages, metadata, flags, (ScratchImage*)presult);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "PremultiplyAlpha2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult PremultiplyAlpha2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_PMALPHA_FLAGS")] TexPMAlphaFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (ScratchImage* presult = &result)
			{
				HResult ret = PremultiplyAlpha2Native(srcImages, nimages, metadata, flags, (ScratchImage*)presult);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "PremultiplyAlpha2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult PremultiplyAlpha2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_PMALPHA_FLAGS")] TexPMAlphaFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (ScratchImage* presult = &result)
				{
					HResult ret = PremultiplyAlpha2Native((Image*)psrcImages, nimages, metadata, flags, (ScratchImage*)presult);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "PremultiplyAlpha2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult PremultiplyAlpha2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_PMALPHA_FLAGS")] TexPMAlphaFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				fixed (ScratchImage* presult = &result)
				{
					HResult ret = PremultiplyAlpha2Native(srcImages, nimages, (TexMetadata*)pmetadata, flags, (ScratchImage*)presult);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "PremultiplyAlpha2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult PremultiplyAlpha2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_PMALPHA_FLAGS")] TexPMAlphaFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					fixed (ScratchImage* presult = &result)
					{
						HResult ret = PremultiplyAlpha2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, flags, (ScratchImage*)presult);
						return ret;
					}
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "PremultiplyAlpha2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult PremultiplyAlpha2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_PMALPHA_FLAGS")] TexPMAlphaFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				fixed (ScratchImage* presult = &result)
				{
					HResult ret = PremultiplyAlpha2Native(srcImages, nimages, (TexMetadata*)pmetadata, flags, (ScratchImage*)presult);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "PremultiplyAlpha2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult PremultiplyAlpha2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "TEX_PMALPHA_FLAGS")] TexPMAlphaFlags flags, [NativeName(NativeNameType.Param, "result")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage result)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					fixed (ScratchImage* presult = &result)
					{
						HResult ret = PremultiplyAlpha2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, flags, (ScratchImage*)presult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Compress")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		internal static HResult CompressNative([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] Image* srcImage, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "compress")] [NativeName(NativeNameType.Type, "TEX_COMPRESS_FLAGS")] TexCompressFlags compress, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "cImage")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* cImage)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<Image*, int, TexCompressFlags, float, ScratchImage*, HResult>)vt[109])(srcImage, format, compress, threshold, cImage);
			#else
			return (HResult)((delegate* unmanaged[Cdecl]<nint, int, TexCompressFlags, float, nint, HResult>)vt[109])((nint)srcImage, format, compress, threshold, (nint)cImage);
			#endif
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Compress")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Compress([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] Image* srcImage, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "compress")] [NativeName(NativeNameType.Type, "TEX_COMPRESS_FLAGS")] TexCompressFlags compress, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "cImage")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* cImage)
		{
			HResult ret = CompressNative(srcImage, format, compress, threshold, cImage);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Compress")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Compress([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] ref Image srcImage, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "compress")] [NativeName(NativeNameType.Type, "TEX_COMPRESS_FLAGS")] TexCompressFlags compress, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "cImage")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* cImage)
		{
			fixed (Image* psrcImage = &srcImage)
			{
				HResult ret = CompressNative((Image*)psrcImage, format, compress, threshold, cImage);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Compress")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Compress([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] Image* srcImage, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "compress")] [NativeName(NativeNameType.Type, "TEX_COMPRESS_FLAGS")] TexCompressFlags compress, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "cImage")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage cImage)
		{
			fixed (ScratchImage* pcImage = &cImage)
			{
				HResult ret = CompressNative(srcImage, format, compress, threshold, (ScratchImage*)pcImage);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Compress")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Compress([NativeName(NativeNameType.Param, "srcImage")] [NativeName(NativeNameType.Type, "Image const&")] ref Image srcImage, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "compress")] [NativeName(NativeNameType.Type, "TEX_COMPRESS_FLAGS")] TexCompressFlags compress, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "cImage")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage cImage)
		{
			fixed (Image* psrcImage = &srcImage)
			{
				fixed (ScratchImage* pcImage = &cImage)
				{
					HResult ret = CompressNative((Image*)psrcImage, format, compress, threshold, (ScratchImage*)pcImage);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Compress2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		internal static HResult Compress2Native([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "compress")] [NativeName(NativeNameType.Type, "TEX_COMPRESS_FLAGS")] TexCompressFlags compress, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "cImages")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* cImages)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<Image*, ulong, TexMetadata*, int, TexCompressFlags, float, ScratchImage*, HResult>)vt[110])(srcImages, nimages, metadata, format, compress, threshold, cImages);
			#else
			return (HResult)((delegate* unmanaged[Cdecl]<nint, ulong, nint, int, TexCompressFlags, float, nint, HResult>)vt[110])((nint)srcImages, nimages, (nint)metadata, format, compress, threshold, (nint)cImages);
			#endif
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Compress2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Compress2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "compress")] [NativeName(NativeNameType.Type, "TEX_COMPRESS_FLAGS")] TexCompressFlags compress, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "cImages")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* cImages)
		{
			HResult ret = Compress2Native(srcImages, nimages, metadata, format, compress, threshold, cImages);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Compress2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Compress2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "compress")] [NativeName(NativeNameType.Type, "TEX_COMPRESS_FLAGS")] TexCompressFlags compress, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "cImages")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* cImages)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				HResult ret = Compress2Native((Image*)psrcImages, nimages, metadata, format, compress, threshold, cImages);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Compress2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Compress2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "compress")] [NativeName(NativeNameType.Type, "TEX_COMPRESS_FLAGS")] TexCompressFlags compress, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "cImages")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* cImages)
		{
			HResult ret = Compress2Native(srcImages, nimages, metadata, format, compress, threshold, cImages);
			return ret;
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Compress2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Compress2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "compress")] [NativeName(NativeNameType.Type, "TEX_COMPRESS_FLAGS")] TexCompressFlags compress, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "cImages")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* cImages)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				HResult ret = Compress2Native((Image*)psrcImages, nimages, metadata, format, compress, threshold, cImages);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Compress2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Compress2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "compress")] [NativeName(NativeNameType.Type, "TEX_COMPRESS_FLAGS")] TexCompressFlags compress, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "cImages")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* cImages)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				HResult ret = Compress2Native(srcImages, nimages, (TexMetadata*)pmetadata, format, compress, threshold, cImages);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Compress2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Compress2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "compress")] [NativeName(NativeNameType.Type, "TEX_COMPRESS_FLAGS")] TexCompressFlags compress, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "cImages")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* cImages)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = Compress2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, format, compress, threshold, cImages);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Compress2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Compress2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "compress")] [NativeName(NativeNameType.Type, "TEX_COMPRESS_FLAGS")] TexCompressFlags compress, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "cImages")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* cImages)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				HResult ret = Compress2Native(srcImages, nimages, (TexMetadata*)pmetadata, format, compress, threshold, cImages);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Compress2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Compress2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "compress")] [NativeName(NativeNameType.Type, "TEX_COMPRESS_FLAGS")] TexCompressFlags compress, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "cImages")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ScratchImage* cImages)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (TexMetadata* pmetadata = &metadata)
				{
					HResult ret = Compress2Native((Image*)psrcImages, nimages, (TexMetadata*)pmetadata, format, compress, threshold, cImages);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Compress2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Compress2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "compress")] [NativeName(NativeNameType.Type, "TEX_COMPRESS_FLAGS")] TexCompressFlags compress, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "cImages")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage cImages)
		{
			fixed (ScratchImage* pcImages = &cImages)
			{
				HResult ret = Compress2Native(srcImages, nimages, metadata, format, compress, threshold, (ScratchImage*)pcImages);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Compress2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Compress2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "compress")] [NativeName(NativeNameType.Type, "TEX_COMPRESS_FLAGS")] TexCompressFlags compress, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "cImages")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage cImages)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (ScratchImage* pcImages = &cImages)
				{
					HResult ret = Compress2Native((Image*)psrcImages, nimages, metadata, format, compress, threshold, (ScratchImage*)pcImages);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Compress2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Compress2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "compress")] [NativeName(NativeNameType.Type, "TEX_COMPRESS_FLAGS")] TexCompressFlags compress, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "cImages")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage cImages)
		{
			fixed (ScratchImage* pcImages = &cImages)
			{
				HResult ret = Compress2Native(srcImages, nimages, metadata, format, compress, threshold, (ScratchImage*)pcImages);
				return ret;
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Compress2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Compress2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] ref Image srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] nuint nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] TexMetadata* metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "compress")] [NativeName(NativeNameType.Type, "TEX_COMPRESS_FLAGS")] TexCompressFlags compress, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "cImages")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage cImages)
		{
			fixed (Image* psrcImages = &srcImages)
			{
				fixed (ScratchImage* pcImages = &cImages)
				{
					HResult ret = Compress2Native((Image*)psrcImages, nimages, metadata, format, compress, threshold, (ScratchImage*)pcImages);
					return ret;
				}
			}
		}

		/// <summary>/// To be documented./// </summary>		[NativeName(NativeNameType.Func, "Compress2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static HResult Compress2([NativeName(NativeNameType.Param, "srcImages")] [NativeName(NativeNameType.Type, "Image const *")] Image* srcImages, [NativeName(NativeNameType.Param, "nimages")] [NativeName(NativeNameType.Type, "size_t")] ulong nimages, [NativeName(NativeNameType.Param, "metadata")] [NativeName(NativeNameType.Type, "TexMetadata const&")] ref TexMetadata metadata, [NativeName(NativeNameType.Param, "format")] [NativeName(NativeNameType.Type, "DXGI_FORMAT")] int format, [NativeName(NativeNameType.Param, "compress")] [NativeName(NativeNameType.Type, "TEX_COMPRESS_FLAGS")] TexCompressFlags compress, [NativeName(NativeNameType.Param, "threshold")] [NativeName(NativeNameType.Type, "float")] float threshold, [NativeName(NativeNameType.Param, "cImages")] [NativeName(NativeNameType.Type, "ScratchImageT *")] ref ScratchImage cImages)
		{
			fixed (TexMetadata* pmetadata = &metadata)
			{
				fixed (ScratchImage* pcImages = &cImages)
				{
					HResult ret = Compress2Native(srcImages, nimages, (TexMetadata*)pmetadata, format, compress, threshold, (ScratchImage*)pcImages);
					return ret;
				}
			}
		}
	}
}
