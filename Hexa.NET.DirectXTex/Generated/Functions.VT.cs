// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;
using Silk.NET.DXGI;
using Silk.NET.Direct2D;
using Silk.NET.Direct3D11;
using Silk.NET.Direct3D12;

namespace Hexa.NET.DirectXTex
{
	public unsafe partial class DirectXTex
	{
		internal static VTable vt;

		public static void InitApi()
		{
			vt = new VTable(GetLibraryName(), 140);
			vt.Load(0, "IsValid");			vt.Load(1, "IsCompressed");			vt.Load(2, "IsPacked");			vt.Load(3, "IsVideo");			vt.Load(4, "IsPlanar");			vt.Load(5, "IsPalettized");			vt.Load(6, "IsDepthStencil");			vt.Load(7, "IsSRGB");			vt.Load(8, "IsTypeless");			vt.Load(9, "HasAlpha");			vt.Load(10, "BitsPerPixel");			vt.Load(11, "BitsPerColor");			vt.Load(12, "FormatDataType");			vt.Load(13, "ComputePitch");			vt.Load(14, "ComputeScanlines");			vt.Load(15, "MakeSRGB");			vt.Load(16, "MakeTypeless");			vt.Load(17, "MakeTypelessUNORM");			vt.Load(18, "MakeTypelessFLOAT");			vt.Load(19, "GetMetadataFromDDSMemory");			vt.Load(20, "GetMetadataFromDDSFile");			vt.Load(21, "GetMetadataFromHDRMemory");			vt.Load(22, "GetMetadataFromHDRFile");			vt.Load(23, "GetMetadataFromTGAMemory");			vt.Load(24, "GetMetadataFromTGAFile");			vt.Load(25, "GetMetadataFromPNGFile");			vt.Load(26, "GetMetadataFromJPEGFile");			vt.Load(27, "GetMetadataFromEXRFile");			vt.Load(28, "GetMetadataFromWICMemory");			vt.Load(29, "GetMetadataFromWICFile");			vt.Load(30, "GetMetadataFromTGAMemory2");			vt.Load(31, "GetMetadataFromTGAFile2");			vt.Load(32, "ComputeIndex");			vt.Load(33, "IsCubemap");			vt.Load(34, "IsPMAlpha");			vt.Load(35, "SetAlphaMode");			vt.Load(36, "GetAlphaMode");			vt.Load(37, "IsVolumemap");			vt.Load(38, "CreateScratchImage");			vt.Load(39, "Initialize");			vt.Load(40, "Initialize1D");			vt.Load(41, "Initialize2D");			vt.Load(42, "Initialize3D");			vt.Load(43, "InitializeCube");			vt.Load(44, "InitializeFromImage");			vt.Load(45, "InitializeArrayFromImages");			vt.Load(46, "InitializeCubeFromImages");			vt.Load(47, "Initialize3DFromImages");			vt.Load(48, "ScratchImageRelease");			vt.Load(49, "OverrideFormat");			vt.Load(50, "GetMetadata");			vt.Load(51, "GetImage");			vt.Load(52, "GetImages");			vt.Load(53, "GetImageCount");			vt.Load(54, "GetPixels");			vt.Load(55, "GetPixelsSize");			vt.Load(56, "IsAlphaAllOpaque");			vt.Load(57, "CreateBlob");			vt.Load(58, "BlobInitialize");			vt.Load(59, "BlobRelease");			vt.Load(60, "BlobGetBufferPointer");			vt.Load(61, "BlobGetBufferSize");			vt.Load(62, "BlobResize");			vt.Load(63, "BlobTrim");			vt.Load(64, "LoadFromDDSMemory");			vt.Load(65, "LoadFromDDSFile");			vt.Load(66, "SaveToDDSMemory");			vt.Load(67, "SaveToDDSMemory2");			vt.Load(68, "SaveToDDSFile");			vt.Load(69, "SaveToDDSFile2");			vt.Load(70, "LoadFromHDRMemory");			vt.Load(71, "LoadFromHDRFile");			vt.Load(72, "SaveToHDRMemory");			vt.Load(73, "SaveToHDRFile");			vt.Load(74, "LoadFromTGAMemory");			vt.Load(75, "LoadFromTGAFile");			vt.Load(76, "SaveToTGAMemory");			vt.Load(77, "SaveToTGAFile");			vt.Load(78, "LoadFromPNGFile");			vt.Load(79, "SaveToPNGFile");			vt.Load(80, "LoadFromJPEGFile");			vt.Load(81, "SaveToJPEGFile");			vt.Load(82, "LoadFromEXRFile");			vt.Load(83, "SaveToEXRFile");			vt.Load(84, "LoadFromWICMemory");			vt.Load(85, "LoadFromWICFile");			vt.Load(86, "SaveToWICMemory");			vt.Load(87, "SaveToWICMemory2");			vt.Load(88, "SaveToWICFile");			vt.Load(89, "SaveToWICFile2");			vt.Load(90, "LoadFromTGAMemory2");			vt.Load(91, "LoadFromTGAFile2");			vt.Load(92, "SaveToTGAMemory2");			vt.Load(93, "SaveToTGAFile2");			vt.Load(94, "FlipRotate");			vt.Load(95, "FlipRotate2");			vt.Load(96, "Resize");			vt.Load(97, "Resize2");			vt.Load(98, "Convert");			vt.Load(99, "Convert2");			vt.Load(100, "ConvertToSinglePlane");			vt.Load(101, "ConvertToSinglePlane2");			vt.Load(102, "GenerateMipMaps");			vt.Load(103, "GenerateMipMaps2");			vt.Load(104, "GenerateMipMaps3D");			vt.Load(105, "GenerateMipMaps3D2");			vt.Load(106, "ScaleMipMapsAlphaForCoverage");			vt.Load(107, "PremultiplyAlpha");			vt.Load(108, "PremultiplyAlpha2");			vt.Load(109, "Compress");			vt.Load(110, "Compress2");			vt.Load(111, "Compress3");			vt.Load(112, "Compress4");			vt.Load(113, "Decompress");			vt.Load(114, "Decompress2");			vt.Load(115, "ComputeNormalMap");			vt.Load(116, "ComputeNormalMap2");			vt.Load(117, "CopyRectangle");			vt.Load(118, "ComputeMSE");			vt.Load(119, "EvaluateImage");			vt.Load(120, "EvaluateImage2");			vt.Load(121, "TransformImage");			vt.Load(122, "TransformImage2");			vt.Load(123, "GetWICCodec");			vt.Load(124, "GetWICFactory");			vt.Load(125, "SetWICFactory");			vt.Load(126, "EncodeDDSHeader");			vt.Load(127, "IsSupportedTexture");			vt.Load(128, "CreateTexture");			vt.Load(129, "CreateShaderResourceView");			vt.Load(130, "CreateTextureEx");			vt.Load(131, "CreateTextureEx2");			vt.Load(132, "CreateShaderResourceViewEx");			vt.Load(133, "CaptureTexture");			vt.Load(134, "IsSupportedTextureD3D12");			vt.Load(135, "CreateTextureD3D12");			vt.Load(136, "CreateTextureExD3D12");			vt.Load(137, "PrepareUpload");			vt.Load(138, "CaptureTextureD3D12");		}

		public static void FreeApi()
		{
			vt.Free();
		}
	}
}
